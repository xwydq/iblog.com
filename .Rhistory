library(readr)
library(dplyr)
library(openxlsx)
library(reshape2)
setwd("~/projectJC/crawler/jcCrawler/juchao/")
shcodes = read_excel("上市公司 .xlsx")
shcodes$股票代码 = trimws(shcodes$股票代码)
shcodes = shcodes[!duplicated(shcodes), ]
shcodes = shcodes[!duplicated(shcodes$股票代码), ]
cxo = read_csv("cxo_info.csv", col_names = F)
cxo = cxo[!duplicated(cxo), ]
names(cxo) = c("姓名", "职务", "出生年份", "性别", "学历", "股票代码")
cxof = cxo %>%
filter(股票代码 %in% shcodes$股票代码)
brief = read_csv("brief_info.csv", col_names = F)
brief = brief[!duplicated(brief), ]
names(brief) = c("字段", "信息", "股票代码")
brieff = brief %>%
filter(股票代码 %in% shcodes$股票代码)
brieff2 = brieff
brieff2$字段 = trimws(brieff2$字段)
brieff2$字段 = gsub("：", "", brieff2$字段)
brieff2 = dcast(brieff2, 股票代码 ~ 字段, value.var = "信息")
length(unique(shcodes$股票代码))
length(unique(cxof$股票代码))
length(unique(brieff$股票代码))
setdiff(shcodes$股票代码, cxof$股票代码)
setdiff(shcodes$股票代码, brieff$股票代码)
cxof = shcodes %>%
left_join(cxof)
brieff = shcodes %>%
left_join(brieff)
brieff2 = shcodes %>%
left_join(brieff2)
res = list("高管信息" = cxof,
"公司概况" = brieff,
"公司概况2" = brieff2)
write.xlsx(res, "res.xlsx")
remove.packages("recharts", lib="~/R/x86_64-redhat-linux-gnu-library/3.4")
devtools::install_github('cosname/recharts')
require(plyr)
axisList = list(
list(index=7, type="category", data = c("low", "middle", "high")),
list(index=6, inverse=TRUE, max=50, nameLocation="start")
)
library(recharts)
axisList
head(parallelDf, 20)
axisList
eParallel(head(parallelDf, 20), series=~groupName, axisList = axisList)
series2 = list(
list(
name = '蒸发量',
type = 'bar',
data = c(2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3)
),
list(
name = '降水量',
type = 'bar',
data = c(2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3)
),
list(
name = '平均温度',
type = 'line',
yAxisIndex = 1,
data = c(2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2)
)
)
ext = list(
xAxis = list(list(
type = "category",
data = c("1月", "2月", "3月", "4月", "5月", "6月",
"7月", "8月", "9月", "10月", "11月",  "12月")
)),
yAxis = list(
list(
type =  'value',
name =  '水量',
min =  0,
max =  250,
interval =  50,
axisLabel =  list(
formatter =  '{value} ml'
)
),
list(
type =  'value',
name =  '温度',
min =  0,
max =  25,
interval =  5,
axisLabel = list(
formatter= '{value}℃'
)
)
))
ePlot(series2, ext )
series2 = list(
list(
name = '蒸发量',
type = 'bar',
data = c(2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3)
),
list(
name = '平均温度',
type = 'line',
yAxisIndex = 1,
data = c(2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2)
)
)
ext = list(
xAxis = list(list(
type = "category",
data = c("1月", "2月", "3月", "4月", "5月", "6月",
"7月", "8月", "9月", "10月", "11月",  "12月")
)),
yAxis = list(
list(
type =  'value',
name =  '水量',
min =  0,
max =  250,
interval =  50,
axisLabel =  list(
formatter =  '{value} ml'
)
),
list(
type =  'value',
name =  '温度',
min =  0,
max =  25,
interval =  5,
axisLabel = list(
formatter= '{value}℃'
)
)
))
ePlot(series2, ext )
library(readxl)
library(dplyr)
setwd("~/projectJC/gcrm/licaishi/")
sheets = excel_sheets("中财一局理财师工作量业绩量.xlsx")
yjl = NULL
for (si in sheets) {
tmp = read_excel("中财一局理财师工作量业绩量.xlsx", sheet = si)
tmp$name = si
yjl = rbind(yjl, tmp)
}
## 删除无数据记录
dlog = yjl %>%
select(-c(年, 月, name))
# dlog = apply(dlog, 1, FUN = function(x) all(is.na(x)) || all(x == 0))
dlog = apply(dlog, 1, FUN = function(x) all(is.na(x)))
yjl = yjl[!dlog, ]
yjl = yjl %>%
filter(!(年 == 2018 & 月 == 2))
write.csv(yjl, "yjl.csv", row.names = F)
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
devtools::install_github("daattali/timevis")
library(timevis)
timevis()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::build_site()
getwd()
q()
q()
q()
getwd()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
runGist('https://gist.github.com/yihui/6091942')
blogdown:::serve_site()
library("recharts", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.4")
eBmap()
blogdown:::serve_site()
blogdown:::serve_site()
library(leaflet)
library(widgetframe)
l <- leaflet() %>% addProviderTiles(providers$CartoDB.DarkMatter) %>% setView(0,0,2)
frameWidget(l)
library(dygraphs)
ts <- dygraph(nhtemp, main = "New Haven Temperatures",
height=250, width='95%')
frameWidget(ts)
library(DT)
dt <-  datatable(
head(iris, 20),
options = list(
columnDefs = list(list(className = 'dt-center', targets = 5)),
pageLength = 5, lengthMenu = c(5, 10, 15, 20)),
fillContainer = T)
frameWidget(dt, height = 350, width = '95%')
library(DT)
dt <-  datatable(
head(iris, 20),
options = list(
columnDefs = list(list(className = 'dt-center', targets = 5)),
pageLength = 5, lengthMenu = c(5, 10, 15, 20)),
fillContainer = T)
dt
frameWidget(dt, height = 350, width = '95%')
frameOptions()
frameWidget
htmlwidgets::createWidget
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
library(leaflet)
library(widgetframe)
l <- leaflet() %>% addTiles() %>% setView(0,0,2)
frameWidget(l, height = '400')
library(leaflet)
library(widgetframe)
l <- leaflet() %>% addTiles() %>% setView(0,0,2)
frameWidget(l, height = '400')
getwd()
library(DT)
dt <-  datatable(
head(iris, 20),
options = list(
columnDefs = list(list(className = 'dt-center', targets = 5)),
pageLength = 5, lengthMenu = c(5, 10, 15, 20)),
fillContainer = T)
library(widgetframe)
htmlwidgets::saveWidget(frameableWidget(dt),'dt.html')
library(DT)
library(widgetframe)
dt <-  datatable(
head(iris, 20),
options = list(
columnDefs = list(list(className = 'dt-center', targets = 5)),
pageLength = 5, lengthMenu = c(5, 10, 15, 20)),
fillContainer = T)
htmlwidgets::saveWidget(frameableWidget(dt),'dt.html')
frameableWidget(dt)
frameWidget(dt)
htmlwidgets::saveWidget(frameWidget(dt),'dt.html')
frameWidget(dt)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(timevis)
templateWC("quarter-finals", "France", "Germany", 0, 1)
templateWC <- function(stage, team1, team2, score1, score2) {
sprintf(
'<table><tbody>
<tr><td colspan="3"><em>%s</em></td></tr>
<tr>
<td>%s</td>
<th>&nbsp;%s - %s&nbsp;</th>
<td>%s</td>
</tr>
<tr>
<td><img src="flags/%s.png" width="31" height="20" alt="%s"></td>
<th></th>
<td><img src="flags/%s.png" width="31" height="20" alt="%s"></td>
</tr>
</tbody></table>',
stage, team1, score1, score2, team2, gsub("\\s", "", tolower(team1)),
team1, gsub("\\s", "", tolower(team2)), team2
)
}
templateWC("quarter-finals", "France", "Germany", 0, 1)
cat(templateWC("quarter-finals", "France", "Germany", 0, 1))
templateWC <- function(stage, team1, team2, score1, score2) {
sprintf(
'<table><tbody>
<tr><td colspan="3"><em>%s</em></td></tr>
<tr>
<td>%s</td>
<th>&nbsp;%s - %s&nbsp;</th>
<td>%s</td>
</tr>
<tr>
<td><img src="https://github.com/hjnilsson/country-flags/blob/master/png100px/%s.png" width="31" height="20" alt="%s"></td>
<th></th>
<td><img src="https://github.com/hjnilsson/country-flags/blob/master/png100px/%s.png" width="31" height="20" alt="%s"></td>
</tr>
</tbody></table>',
stage, team1, score1, score2, team2, gsub("\\s", "", tolower(team1)),
team1, gsub("\\s", "", tolower(team2)), team2
)
}
templateWC("quarter-finals", "fr", "ge", 0, 1)
cat(templateWC("quarter-finals", "fr", "ge", 0, 1))
blogdown:::serve_site()
detach("package:timevis", unload=TRUE)
remove.packages("timevis", lib="~/R/x86_64-redhat-linux-gnu-library/3.4")
devtools::install_github("daattali/timevis")
blogdown:::serve_site()
x = "\\xE6\\xA0\\xB9"
x
gsub("\\", "\", x)
gsub("\\", "\\", x, fixed = TRUE)
gsub("\\\\", "\\", x, fixed = TRUE)
gsub("`\\`", "`\`", x, fixed = TRUE)
gsub(`\\`, "`\`", x, fixed = TRUE)
gregexpr('\\', x)
gregexpr('\\', x, fixed = T)
x
gregexpr('\\', x, fixed = T)[[1]]
nchar(x)
runApp('~/projectJC/crawler/back_conf/app-v1.0')
runApp('~/projectJC/crawler/back_conf/app-v1.0')
# source("init/")
library(shiny)
library(tagsinput)
library(shinydashboard)
library(shinyWidgets)
library(DT)
library(data.table)
library(dplyr)
library(lubridate)
library(tools)
library(shinyBS)
library(RMySQL)
library(digest)
library(shinyjs)
library(jsonlite)
library(readr)
library(digest)
install.packages("sweetalertR")
install_github("timelyportfolio/sweetalertR")
library(devtools)
install_github("timelyportfolio/sweetalertR")
library(sweetalertR)
runApp('~/projectJC/crawler/back_conf/app-v1.0')
shinyApp(
ui = fluidPage(
tags$h1("Click the button"),
actionButton(inputId = "success", label = "Launch a success sweet alert"),
actionButton(inputId = "error", label = "Launch an error sweet alert"),
useSweetAlert()
),
server = function(input, output, session) {
observeEvent(input$success, {
sendSweetAlert(
session = session, title = "Success !!", text = "All in order", type = "success"
)
})
observeEvent(input$error, {
sendSweetAlert(
session = session, title = "Error !!", text = "It's broken...", type = "error"
)
})
}
)
runApp('~/projectJC/crawler/back_conf/app-v1.0')
runApp('~/projectJC/crawler/back_conf/app-v1.0')
runApp('~/projectJC/crawler/back_conf/app-v1.0')
getwd()
blogdown:::new_post_addin()
q()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
s1 = '恒C信华夏12幸银业福AA'
s2 = '恒信银业'
agrep(s2, s1, max = list(cost = 100), value = TRUE)
agrep(s2, s1, max = list(all = 2), value = TRUE)
agrep(s2, s1, max = 0.1, value = TRUE)
agrep("lasy", "1 lazy 2")
agrep("lasy", "1 lazy 2", max = list(sub = 1))
agrep("laysy", c("1 lazy", "1", "1 LAZY"), max = 1)
agrep("laysy", c("1 lazy", "1", "1 LAZY"), max = 2, value = TRUE)
agrep("laysy", c("1 lazy", "1", "1 LAZY"), max = 2, ignore.case = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
agrep(s2, s1, max = list(cost = 100), value = TRUE)
agrep(s2, s1, max = list(all = 2), value = TRUE)
agrep(s2, s1, max = 0.1, value = TRUE)
nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
agrep(s2, s1, max = list(cost = 100), value = TRUE)
agrep(s2, s1, max = list(all = 2), value = TRUE)
agrep(s2, s1, max = 0.1, value = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
# nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
agrep(s2, s1, max = list(cost = 5), value = TRUE)
agrep(s2, s1, max = list(all = 2), value = TRUE)
agrep(s2, s1, max = 0.1, value = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
# nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
agrep(s2, s1, max = list(cost = 4), value = TRUE)
agrep(s2, s1, max = list(all = 2), value = TRUE)
agrep(s2, s1, max = 0.1, value = TRUE)
agrep(s2, s1, max = list(cost = 3), value = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
# nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
agrep(s2, s1, max = list(cost = 3), value = TRUE)
agrep(s2, s1, max = list(all = 2), value = TRUE)
agrep(s2, s1, max = 0.1, value = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
# nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
agrep(s2, s1, max = list(cost = 1), value = TRUE)
agrep(s2, s1, max = list(all = 2), value = TRUE)
agrep(s2, s1, max = 0.1, value = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
# nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
agrep(s2, s1, max = list(cost = 2), value = TRUE)
agrep(s2, s1, max = list(all = 2), value = TRUE)
agrep(s2, s1, max = 0.1, value = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
# nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
agrep(s1, s2, max = 2, value = TRUE)
agrep(s1, s2, max = 0.1, value = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
# nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
agrep(s1, s2, max = 4, value = TRUE)
agrep(s1, s2, max = 0.1, value = TRUE)
s1 = '恒信（华夏幸银业福）'
s2 = '恒信银业'
# nms = str_remove_all(dat_i$pro_nm_abbr, '[^\\w+]')
agrep(s1, s2, max = 4, value = TRUE)
agrep(s1, s2, max = 6, value = TRUE)
agrep(s1, s2, max = 0.1, value = TRUE)
library(stringr)
str_test = 'I ***爱 ¥¥¥coding1-7'
str_remove_all(str_test, '[^\\w+]')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
library(RMySQL)
library(dplyr)
# db <- dbConnect(MySQL(), dbname = "ppp_crawl", host = 'localhost',
#                 port = 3306, user = 'root',
#                 password = 'jc1116')
#
# dbSendQuery(db,'SET NAMES utf8')
# dbListTables(db)
# dat = dbReadTable(db, "cpppc")
# dbDisconnect(db)
# root/XDQ@$jc1116
# xuwy/XWY01@jc1116
# vip_indata
db <- dbConnect(MySQL(), dbname = "testutf", host = '43.241.232.105',
port = 3306, user = 'xuwy',
password = 'XWY01@jc1116')
dbSendQuery(db,'SET NAMES utf8')
dbListTables(db)
dbDisconnect(db)
setwd('~/Downloads/data/intimeVIP/')
lt_files = list.files()
res = NULL
# for (i in 1:length(lt_files)) {
for (i in 1:2) {
print(i)
t_file = lt_files[i]
tmp = readxl::read_excel(t_file)
tmp = tmp %>%
filter(!(is.na(MOBILEPHONE) & is.na(TELEPHONE))) %>%
select(SEQNO,
NAME,
IDNO,
SEX,
BIRTHDAY,
ENABLEDATE,
MOBILEPHONE,
TELEPHONE,
ADDRESS,
MAIL,
STORENO)
if(is.null(res)){
res = tmp
}else{
res = res[!(res$SEQNO %in% tmp$SEQNO), ]
res = rbind(res, tmp)
print(dim(res))
}
}
db <- dbConnect(MySQL(), dbname = "vipdata", host = 'localhost',
port = 3306, user = 'root',
password = 'jc1116')
dbSendQuery(db,'SET NAMES utf8')
dbWriteTable(db, 'latest_vip', res, overwrite = TRUE, row.names=FALSE)
dbListTables(db)
dbDisconnect(db)
db <- dbConnect(MySQL(), dbname = "vipdata", host = 'localhost',
port = 3306, user = 'root',
password = 'jc1116')
dbSendQuery(db,'SET NAMES utf8')
dbWriteTable(db, 'latest_vip', res, overwrite = TRUE, row.names=FALSE)
dbListTables(db)
dbDisconnect(db)
