<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>四舍五入 on 飞舞的尘埃</title>
    <link>/tags/%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5/</link>
    <description>Recent content in 四舍五入 on 飞舞的尘埃</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 28 Mar 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R-数学概念中的四舍五入</title>
      <link>/note/2015/03/28/r-%E6%95%B0%E5%AD%A6%E6%A6%82%E5%BF%B5%E4%B8%AD%E7%9A%84%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5/</link>
      <pubDate>Sat, 28 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>/note/2015/03/28/r-%E6%95%B0%E5%AD%A6%E6%A6%82%E5%BF%B5%E4%B8%AD%E7%9A%84%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5/</guid>
      <description>最近被R中的round函数搞得郁闷，有人说round函数的规则是如此定义。引用cos 版主肖楠：这个规则有个俗名叫「四舍六入五凑偶」，也叫「银行家舍入」，完整版如下：
 被修约的数字等于或小于 4 时，该数字舍去； 被修约的数字等于或大于 6 时，则进位； 被修约的数字等于 5 时，要看 5 前面的数字，若是奇数则进位，若是偶数则将 5 舍掉，即修约后末尾数字都成为偶数；若 5 的后面还有不为 “0” 的任何数，则此时无论 5 的前面是奇数还是偶数，均应进位。   举例，用上述规则对下列数据保留 3 位有效数字：
9.8249=9.82, 9.82671=9.83 9.8350=9.84, 9.8351 =9.84 9.8250=9.82, 9.82501=9.83  好像是说明了问题，但是：
round(9.9995,3) # 9.999  难道9是奇数中一个特例？
以下为自己在R中实现的小数的四舍五入（主要是想按照数学中的规则：对该数的的绝对值四舍五入再加上正负号）。代码还有许多改进的方面，目前只是满足个人需要示例（对某个数小数位后保留n位后四舍五入）：
myRound &amp;lt;- function(x, keep=4){ x &amp;lt;- as.character(x) if(grepl(&amp;quot;[.]&amp;quot;, x)){ xSplit &amp;lt;- unlist(strsplit(x, &amp;quot;[.]&amp;quot;)) xSplitBef &amp;lt;- xSplit[1] minusYN &amp;lt;- substring(xSplitBef, 1, 1) # minusYN &amp;lt;- minusYN == &amp;quot;-&amp;quot; xSplitAft &amp;lt;- xSplit[2] xSplitAft &amp;lt;- substring(xSplitAft, 1:nchar(xSplitAft), 1:nchar(xSplitAft)) if(minusYN == &amp;quot;-&amp;quot;){ xSplitBef &amp;lt;- substring(xSplitBef, 2:nchar(xSplitBef), 2:nchar(xSplitBef)) lenBef &amp;lt;- length(xSplitBef) lenAft &amp;lt;- length(xSplitAft) if(lenAft &amp;gt; keep){ all &amp;lt;- c(xSplitBef, xSplitAft[1:(keep + 1)]) if(as.</description>
    </item>
    
  </channel>
</rss>